function cov_4i4oafpyn() {
  var path = "C:\\Users\\juraj\\naty\\2\\ToolJet-develop-2\\frontend\\src\\Editor\\Components\\Map\\styles.js";
  var hash = "ea87029d32b802b2deb7c7913044ac2a99a54520";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\juraj\\naty\\2\\ToolJet-develop-2\\frontend\\src\\Editor\\Components\\Map\\styles.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 30
        },
        end: {
          line: 137,
          column: 1
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ea87029d32b802b2deb7c7913044ac2a99a54520"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_4i4oafpyn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_4i4oafpyn();
export const darkModeStyles = (cov_4i4oafpyn().s[0]++, [{
  featureType: 'all',
  elementType: 'labels.text.fill',
  stylers: [{
    color: '#ffffff'
  }]
}, {
  featureType: 'all',
  elementType: 'labels.text.stroke',
  stylers: [{
    color: '#000000'
  }, {
    lightness: 13
  }]
}, {
  featureType: 'administrative',
  elementType: 'geometry.fill',
  stylers: [{
    color: '#000000'
  }]
}, {
  featureType: 'administrative',
  elementType: 'geometry.stroke',
  stylers: [{
    color: '#144b53'
  }, {
    lightness: 14
  }, {
    weight: 1.4
  }]
}, {
  featureType: 'landscape',
  elementType: 'all',
  stylers: [{
    color: '#08304b'
  }]
}, {
  featureType: 'poi',
  elementType: 'geometry',
  stylers: [{
    color: '#0c4152'
  }, {
    lightness: 5
  }]
}, {
  featureType: 'road.highway',
  elementType: 'geometry.fill',
  stylers: [{
    color: '#000000'
  }]
}, {
  featureType: 'road.highway',
  elementType: 'geometry.stroke',
  stylers: [{
    color: '#0b434f'
  }, {
    lightness: 25
  }]
}, {
  featureType: 'road.arterial',
  elementType: 'geometry.fill',
  stylers: [{
    color: '#000000'
  }]
}, {
  featureType: 'road.arterial',
  elementType: 'geometry.stroke',
  stylers: [{
    color: '#0b3d51'
  }, {
    lightness: 16
  }]
}, {
  featureType: 'road.local',
  elementType: 'geometry',
  stylers: [{
    color: '#000000'
  }]
}, {
  featureType: 'transit',
  elementType: 'all',
  stylers: [{
    color: '#146474'
  }]
}, {
  featureType: 'water',
  elementType: 'all',
  stylers: [{
    color: '#021019'
  }]
}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlcy5qcyJdLCJuYW1lcyI6WyJkYXJrTW9kZVN0eWxlcyIsImZlYXR1cmVUeXBlIiwiZWxlbWVudFR5cGUiLCJzdHlsZXJzIiwiY29sb3IiLCJsaWdodG5lc3MiLCJ3ZWlnaHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFlWTs7Ozs7Ozs7O0FBZlosT0FBTyxNQUFNQSxjQUFjLDRCQUFHLENBQzVCO0FBQ0VDLEVBQUFBLFdBQVcsRUFBRSxLQURmO0FBRUVDLEVBQUFBLFdBQVcsRUFBRSxrQkFGZjtBQUdFQyxFQUFBQSxPQUFPLEVBQUUsQ0FDUDtBQUNFQyxJQUFBQSxLQUFLLEVBQUU7QUFEVCxHQURPO0FBSFgsQ0FENEIsRUFVNUI7QUFDRUgsRUFBQUEsV0FBVyxFQUFFLEtBRGY7QUFFRUMsRUFBQUEsV0FBVyxFQUFFLG9CQUZmO0FBR0VDLEVBQUFBLE9BQU8sRUFBRSxDQUNQO0FBQ0VDLElBQUFBLEtBQUssRUFBRTtBQURULEdBRE8sRUFJUDtBQUNFQyxJQUFBQSxTQUFTLEVBQUU7QUFEYixHQUpPO0FBSFgsQ0FWNEIsRUFzQjVCO0FBQ0VKLEVBQUFBLFdBQVcsRUFBRSxnQkFEZjtBQUVFQyxFQUFBQSxXQUFXLEVBQUUsZUFGZjtBQUdFQyxFQUFBQSxPQUFPLEVBQUUsQ0FDUDtBQUNFQyxJQUFBQSxLQUFLLEVBQUU7QUFEVCxHQURPO0FBSFgsQ0F0QjRCLEVBK0I1QjtBQUNFSCxFQUFBQSxXQUFXLEVBQUUsZ0JBRGY7QUFFRUMsRUFBQUEsV0FBVyxFQUFFLGlCQUZmO0FBR0VDLEVBQUFBLE9BQU8sRUFBRSxDQUNQO0FBQ0VDLElBQUFBLEtBQUssRUFBRTtBQURULEdBRE8sRUFJUDtBQUNFQyxJQUFBQSxTQUFTLEVBQUU7QUFEYixHQUpPLEVBT1A7QUFDRUMsSUFBQUEsTUFBTSxFQUFFO0FBRFYsR0FQTztBQUhYLENBL0I0QixFQThDNUI7QUFDRUwsRUFBQUEsV0FBVyxFQUFFLFdBRGY7QUFFRUMsRUFBQUEsV0FBVyxFQUFFLEtBRmY7QUFHRUMsRUFBQUEsT0FBTyxFQUFFLENBQ1A7QUFDRUMsSUFBQUEsS0FBSyxFQUFFO0FBRFQsR0FETztBQUhYLENBOUM0QixFQXVENUI7QUFDRUgsRUFBQUEsV0FBVyxFQUFFLEtBRGY7QUFFRUMsRUFBQUEsV0FBVyxFQUFFLFVBRmY7QUFHRUMsRUFBQUEsT0FBTyxFQUFFLENBQ1A7QUFDRUMsSUFBQUEsS0FBSyxFQUFFO0FBRFQsR0FETyxFQUlQO0FBQ0VDLElBQUFBLFNBQVMsRUFBRTtBQURiLEdBSk87QUFIWCxDQXZENEIsRUFtRTVCO0FBQ0VKLEVBQUFBLFdBQVcsRUFBRSxjQURmO0FBRUVDLEVBQUFBLFdBQVcsRUFBRSxlQUZmO0FBR0VDLEVBQUFBLE9BQU8sRUFBRSxDQUNQO0FBQ0VDLElBQUFBLEtBQUssRUFBRTtBQURULEdBRE87QUFIWCxDQW5FNEIsRUE0RTVCO0FBQ0VILEVBQUFBLFdBQVcsRUFBRSxjQURmO0FBRUVDLEVBQUFBLFdBQVcsRUFBRSxpQkFGZjtBQUdFQyxFQUFBQSxPQUFPLEVBQUUsQ0FDUDtBQUNFQyxJQUFBQSxLQUFLLEVBQUU7QUFEVCxHQURPLEVBSVA7QUFDRUMsSUFBQUEsU0FBUyxFQUFFO0FBRGIsR0FKTztBQUhYLENBNUU0QixFQXdGNUI7QUFDRUosRUFBQUEsV0FBVyxFQUFFLGVBRGY7QUFFRUMsRUFBQUEsV0FBVyxFQUFFLGVBRmY7QUFHRUMsRUFBQUEsT0FBTyxFQUFFLENBQ1A7QUFDRUMsSUFBQUEsS0FBSyxFQUFFO0FBRFQsR0FETztBQUhYLENBeEY0QixFQWlHNUI7QUFDRUgsRUFBQUEsV0FBVyxFQUFFLGVBRGY7QUFFRUMsRUFBQUEsV0FBVyxFQUFFLGlCQUZmO0FBR0VDLEVBQUFBLE9BQU8sRUFBRSxDQUNQO0FBQ0VDLElBQUFBLEtBQUssRUFBRTtBQURULEdBRE8sRUFJUDtBQUNFQyxJQUFBQSxTQUFTLEVBQUU7QUFEYixHQUpPO0FBSFgsQ0FqRzRCLEVBNkc1QjtBQUNFSixFQUFBQSxXQUFXLEVBQUUsWUFEZjtBQUVFQyxFQUFBQSxXQUFXLEVBQUUsVUFGZjtBQUdFQyxFQUFBQSxPQUFPLEVBQUUsQ0FDUDtBQUNFQyxJQUFBQSxLQUFLLEVBQUU7QUFEVCxHQURPO0FBSFgsQ0E3RzRCLEVBc0g1QjtBQUNFSCxFQUFBQSxXQUFXLEVBQUUsU0FEZjtBQUVFQyxFQUFBQSxXQUFXLEVBQUUsS0FGZjtBQUdFQyxFQUFBQSxPQUFPLEVBQUUsQ0FDUDtBQUNFQyxJQUFBQSxLQUFLLEVBQUU7QUFEVCxHQURPO0FBSFgsQ0F0SDRCLEVBK0g1QjtBQUNFSCxFQUFBQSxXQUFXLEVBQUUsT0FEZjtBQUVFQyxFQUFBQSxXQUFXLEVBQUUsS0FGZjtBQUdFQyxFQUFBQSxPQUFPLEVBQUUsQ0FDUDtBQUNFQyxJQUFBQSxLQUFLLEVBQUU7QUFEVCxHQURPO0FBSFgsQ0EvSDRCLENBQUgsQ0FBcEIiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZGFya01vZGVTdHlsZXMgPSBbXG4gIHtcbiAgICBmZWF0dXJlVHlwZTogJ2FsbCcsXG4gICAgZWxlbWVudFR5cGU6ICdsYWJlbHMudGV4dC5maWxsJyxcbiAgICBzdHlsZXJzOiBbXG4gICAgICB7XG4gICAgICAgIGNvbG9yOiAnI2ZmZmZmZicsXG4gICAgICB9LFxuICAgIF0sXG4gIH0sXG4gIHtcbiAgICBmZWF0dXJlVHlwZTogJ2FsbCcsXG4gICAgZWxlbWVudFR5cGU6ICdsYWJlbHMudGV4dC5zdHJva2UnLFxuICAgIHN0eWxlcnM6IFtcbiAgICAgIHtcbiAgICAgICAgY29sb3I6ICcjMDAwMDAwJyxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGxpZ2h0bmVzczogMTMsXG4gICAgICB9LFxuICAgIF0sXG4gIH0sXG4gIHtcbiAgICBmZWF0dXJlVHlwZTogJ2FkbWluaXN0cmF0aXZlJyxcbiAgICBlbGVtZW50VHlwZTogJ2dlb21ldHJ5LmZpbGwnLFxuICAgIHN0eWxlcnM6IFtcbiAgICAgIHtcbiAgICAgICAgY29sb3I6ICcjMDAwMDAwJyxcbiAgICAgIH0sXG4gICAgXSxcbiAgfSxcbiAge1xuICAgIGZlYXR1cmVUeXBlOiAnYWRtaW5pc3RyYXRpdmUnLFxuICAgIGVsZW1lbnRUeXBlOiAnZ2VvbWV0cnkuc3Ryb2tlJyxcbiAgICBzdHlsZXJzOiBbXG4gICAgICB7XG4gICAgICAgIGNvbG9yOiAnIzE0NGI1MycsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBsaWdodG5lc3M6IDE0LFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgd2VpZ2h0OiAxLjQsXG4gICAgICB9LFxuICAgIF0sXG4gIH0sXG4gIHtcbiAgICBmZWF0dXJlVHlwZTogJ2xhbmRzY2FwZScsXG4gICAgZWxlbWVudFR5cGU6ICdhbGwnLFxuICAgIHN0eWxlcnM6IFtcbiAgICAgIHtcbiAgICAgICAgY29sb3I6ICcjMDgzMDRiJyxcbiAgICAgIH0sXG4gICAgXSxcbiAgfSxcbiAge1xuICAgIGZlYXR1cmVUeXBlOiAncG9pJyxcbiAgICBlbGVtZW50VHlwZTogJ2dlb21ldHJ5JyxcbiAgICBzdHlsZXJzOiBbXG4gICAgICB7XG4gICAgICAgIGNvbG9yOiAnIzBjNDE1MicsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBsaWdodG5lc3M6IDUsXG4gICAgICB9LFxuICAgIF0sXG4gIH0sXG4gIHtcbiAgICBmZWF0dXJlVHlwZTogJ3JvYWQuaGlnaHdheScsXG4gICAgZWxlbWVudFR5cGU6ICdnZW9tZXRyeS5maWxsJyxcbiAgICBzdHlsZXJzOiBbXG4gICAgICB7XG4gICAgICAgIGNvbG9yOiAnIzAwMDAwMCcsXG4gICAgICB9LFxuICAgIF0sXG4gIH0sXG4gIHtcbiAgICBmZWF0dXJlVHlwZTogJ3JvYWQuaGlnaHdheScsXG4gICAgZWxlbWVudFR5cGU6ICdnZW9tZXRyeS5zdHJva2UnLFxuICAgIHN0eWxlcnM6IFtcbiAgICAgIHtcbiAgICAgICAgY29sb3I6ICcjMGI0MzRmJyxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGxpZ2h0bmVzczogMjUsXG4gICAgICB9LFxuICAgIF0sXG4gIH0sXG4gIHtcbiAgICBmZWF0dXJlVHlwZTogJ3JvYWQuYXJ0ZXJpYWwnLFxuICAgIGVsZW1lbnRUeXBlOiAnZ2VvbWV0cnkuZmlsbCcsXG4gICAgc3R5bGVyczogW1xuICAgICAge1xuICAgICAgICBjb2xvcjogJyMwMDAwMDAnLFxuICAgICAgfSxcbiAgICBdLFxuICB9LFxuICB7XG4gICAgZmVhdHVyZVR5cGU6ICdyb2FkLmFydGVyaWFsJyxcbiAgICBlbGVtZW50VHlwZTogJ2dlb21ldHJ5LnN0cm9rZScsXG4gICAgc3R5bGVyczogW1xuICAgICAge1xuICAgICAgICBjb2xvcjogJyMwYjNkNTEnLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbGlnaHRuZXNzOiAxNixcbiAgICAgIH0sXG4gICAgXSxcbiAgfSxcbiAge1xuICAgIGZlYXR1cmVUeXBlOiAncm9hZC5sb2NhbCcsXG4gICAgZWxlbWVudFR5cGU6ICdnZW9tZXRyeScsXG4gICAgc3R5bGVyczogW1xuICAgICAge1xuICAgICAgICBjb2xvcjogJyMwMDAwMDAnLFxuICAgICAgfSxcbiAgICBdLFxuICB9LFxuICB7XG4gICAgZmVhdHVyZVR5cGU6ICd0cmFuc2l0JyxcbiAgICBlbGVtZW50VHlwZTogJ2FsbCcsXG4gICAgc3R5bGVyczogW1xuICAgICAge1xuICAgICAgICBjb2xvcjogJyMxNDY0NzQnLFxuICAgICAgfSxcbiAgICBdLFxuICB9LFxuICB7XG4gICAgZmVhdHVyZVR5cGU6ICd3YXRlcicsXG4gICAgZWxlbWVudFR5cGU6ICdhbGwnLFxuICAgIHN0eWxlcnM6IFtcbiAgICAgIHtcbiAgICAgICAgY29sb3I6ICcjMDIxMDE5JyxcbiAgICAgIH0sXG4gICAgXSxcbiAgfSxcbl07XG4iXX0=